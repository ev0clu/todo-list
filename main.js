(()=>{"use strict";var e={774:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Hind+Siliguri&display=swap);"]),a.push([e.id,"/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n\n:root {\n    --body-color: #f5f5f4;\n    --header-color: #ef4444;\n    --item-color-hover: #e7e5e4;\n    --border-color: #d6d3d1;\n    --btn-add-color: #ef4444;\n    --btn-cancel-color: #a8a29e;\n    --btn-add-color-hover: #dc2626;\n    --btn-cancel-color-hover: #78716c;\n    --warning-color: #b91c1c;\n    --priority-low-color: #a3e635;\n    --priority-medium-color: #fbbf24;\n    --priority-high-color: #f87171;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Hind Siliguri', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    min-width: 100vw;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    font-size: 2.5rem;\n    font-weight: 900;\n    color: white;\n    background-color: var(--header-color);\n    padding: 1rem 3rem 1rem 3rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    flex-direction: row;\n    padding: 1rem;\n}\n\n#nav-bar,\n#task-content {\n    padding: 2rem;\n}\n\n#nav-bar {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 3rem;\n    border-right: 1px solid var(--border-color);\n}\n\n.nav-item {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n    height: 2.5rem;\n    font-size: 1.5rem;\n    padding-left: 0.3rem;\n    border-radius: 8px;\n}\n\n#nav-inbox img,\n#nav-today img,\n#nav-week img {\n    height: 70%;\n    width: auto;\n}\n\n#nav-bottom {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n#nav-bottom h1,\n#task-content h1,\n#task-modal-view-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n}\n\n#project-field {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.project-item {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.3rem;\n    border-radius: 8px;\n    font-size: 1rem;\n}\n\n.nav-item:hover,\n.project-item:hover {\n    background-color: var(--item-color-hover);\n}\n\n.nav-item:hover,\n.project-item button:hover {\n    cursor: pointer;\n}\n\n.nav-item:active,\n.project-item:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n}\n\n.item-selected {\n    background-color: var(--item-color-hover);\n}\n\n.project-item-left,\n.project-item-right {\n    background: none;\n    border: none;\n    font-size: 1.3rem;\n    height: 2.5rem;\n}\n\n.project-item-left {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n    width: 90%;\n}\n\n.project-item-right {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    visibility: hidden;\n}\n\n.project-item:hover > .project-item-right {\n    visibility: visible;\n}\n\n.task-item-right .material-symbols-outlined,\n.project-item .material-symbols-outlined {\n    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n}\n\n#btn-new-project-container,\n#btn-new-task-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#btn-new-project {\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    background: none;\n    border: none;\n    font: inherit;\n    outline: inherit;\n    margin-top: 1rem;\n}\n\n#btn-new-project,\n#btn-new-task {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n#btn-new-project:hover,\n#btn-new-task:hover {\n    background-color: var(--item-color-hover);\n    cursor: pointer;\n}\n\n#btn-new-project:active,\n#btn-new-task:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n}\n\n.material-symbols-outlined {\n    font-variation-settings: 'FILL' 1, 'wght' 500, 'GRAD' 0, 'opsz' 48;\n}\n\n#project-modal-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 0.4rem;\n}\n\n#project-name-input,\n#task-title-input,\n#task-description-input,\n#task-duedate-input {\n    font-family: 'Hind Siliguri', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    border-radius: 8px;\n    border: 1px solid var(--border-color);\n}\n\n#project-name-input {\n    display: block;\n    font-size: 1.3rem;\n    padding: 0.3rem 0.6rem 0.3rem 0.6rem;\n    width: 100%;\n}\n\n#task-title-input,\n#task-description-input,\n#task-duedate-input {\n    font-size: 1rem;\n    padding: 0.2rem 0.4rem 0.2rem 0.4rem;\n}\n\n#project-warning,\n#task-warning {\n    height: 1rem;\n    color: var(--warning-color);\n    text-align: center;\n}\n\n#btn-project-modal-container,\n#btn-task-modal-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\n#btn-add-project:hover,\n#btn-add-task:hover {\n    cursor: pointer;\n    background-color: var(--btn-add-color-hover);\n}\n\n#btn-cancel-project:hover,\n#btn-cancel-task:hover,\n#btn-new-task:hover {\n    cursor: pointer;\n    background-color: var(--btn-cancel-color-hover);\n}\n\n#btn-add-project:active,\n#btn-cancel-project:active,\n#btn-cancel-task:active,\n#btn-new-task:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n#btn-add-project,\n#btn-cancel-project,\n#btn-add-task,\n#btn-cancel-task {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    font-weight: 600;\n    color: white;\n    border-radius: 8px;\n    padding: 0.4rem 0.8rem 0.4rem 0.8rem;\n}\n\n#btn-add-project,\n#btn-add-task {\n    width: 5rem;\n    background-color: var(--btn-add-color);\n}\n\n#btn-cancel-project,\n#btn-cancel-task {\n    width: 5rem;\n    background-color: var(--btn-cancel-color);\n}\n\n#btn-new-task {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.3rem;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: white;\n    border-radius: 8px;\n    padding: 0.6rem 0.3rem 0.6rem 0.3rem;\n    width: 10rem;\n    background-color: var(--btn-cancel-color);\n}\n\n#task-content {\n    flex: 4;\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n#task-modal-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    position: fixed; /* Position the pop-up fixed on the screen */\n    top: 55%; /* Position the pop-up vertically centered */\n    left: 63%; /* Position the pop-up horizontally centered */\n    transform: translate(-50%, -50%); /* Offset the pop-up to the center of the screen */\n    z-index: 1; /* Make sure the pop-up is on top of other elements */\n}\n\n#task-modal {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    padding: 2rem; /* Add some padding to the pop-up */\n    border-radius: 8px;\n    background-color: var(--body-color);\n    width: 50%;\n}\n\n.task-modal-input,\n#task-modal > fieldset {\n    display: flex;\n    flex-direction: column;\n    gap: 0.3rem;\n}\n\n#task-modal > fieldset > div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#task-modal label,\n#task-content legend {\n    font-size: 1.2rem;\n    font-weight: 500;\n}\n\n.description-input-sublabel {\n    font-size: 0.7rem;\n    font-weight: 100;\n    color: #a0a3a7;\n}\n\n#task-field {\n    display: flex;\n    flex-direction: column;\n    gap: 0.7rem;\n}\n\n.task-item,\n.task-item-left,\n.task-item-right {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.task-item {\n    gap: 1rem;\n    width: 100%;\n    border: 1px solid grey;\n    padding: 0.5rem;\n    border-radius: 8px;\n}\n\n.task-item-left {\n    justify-content: center;\n    font-size: 1.2rem;\n    gap: 0.5rem;\n}\n\n.task-item-right {\n    justify-content: center;\n    gap: 0.2rem;\n}\n\n.task-item-right .material-symbols-outlined:hover,\n.btn-close-view-task-modal .material-symbols-outlined:hover {\n    font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n    cursor: pointer;\n}\n\n.btn-task-view,\n.btn-task-edit,\n.btn-task-remove,\n.btn-close-view-task-modal {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    background: none;\n    border: none;\n    font: inherit;\n    outline: inherit;\n}\n\n.task-item-middle {\n    flex: 2;\n    text-align: end;\n}\n\n.priority-low {\n    box-shadow: inset 0.3rem 0 var(--priority-low-color);\n}\n\n.priority-medium {\n    box-shadow: inset 0.3rem 0 var(--priority-medium-color);\n}\n\n.priority-high {\n    box-shadow: inset 0.3rem 0 var(--priority-high-color);\n}\n\n#task-checkbox {\n    cursor: pointer;\n}\n\n.task-done {\n    text-decoration: line-through;\n}\n\n.inactive {\n    pointer-events: none;\n    background-color: rgba(0, 0, 0, 0.2); /* Black w/ opacity */\n}\n\n#task-view-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    position: fixed; /* Position the pop-up fixed on the screen */\n    top: 50%; /* Position the pop-up vertically centered */\n    left: 63%; /* Position the pop-up horizontally centered */\n    transform: translate(-50%, -50%); /* Offset the pop-up to the center of the screen */\n    z-index: 1; /* Make sure the pop-up is on top of other elements */\n}\n\n#task-modal-view {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    padding: 2rem; /* Add some padding to the pop-up */\n    border-radius: 8px;\n    background-color: var(--body-color);\n    width: 50%;\n}\n\n.btn-close-view-task-modal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 26%;\n    top: 5%;\n}\n\n.btn-close-view-task-modal .material-symbols-outlined {\n    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n}\n\n#task-informations {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    font-size: 1.1rem;\n}\n\n#task-modal-view-description,\n#task-modal-view-duedate,\n#task-modal-view-priority {\n    display: flex;\n    flex-direction: column;\n    gap: 0.4rem;\n}\n\n#task-modal-view-description > p:first-child,\n#task-modal-view-duedate > p:first-child,\n#task-modal-view-priority > p:first-child {\n    text-decoration: underline;\n    font-weight: bold;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    /*font-family: 'Roboto', sans-serif;*/\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n","",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Hind+Siliguri&display=swap');\n\n/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n\n:root {\n    --body-color: #f5f5f4;\n    --header-color: #ef4444;\n    --item-color-hover: #e7e5e4;\n    --border-color: #d6d3d1;\n    --btn-add-color: #ef4444;\n    --btn-cancel-color: #a8a29e;\n    --btn-add-color-hover: #dc2626;\n    --btn-cancel-color-hover: #78716c;\n    --warning-color: #b91c1c;\n    --priority-low-color: #a3e635;\n    --priority-medium-color: #fbbf24;\n    --priority-high-color: #f87171;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Hind Siliguri', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    min-width: 100vw;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    font-size: 2.5rem;\n    font-weight: 900;\n    color: white;\n    background-color: var(--header-color);\n    padding: 1rem 3rem 1rem 3rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    flex-direction: row;\n    padding: 1rem;\n}\n\n#nav-bar,\n#task-content {\n    padding: 2rem;\n}\n\n#nav-bar {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 3rem;\n    border-right: 1px solid var(--border-color);\n}\n\n.nav-item {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n    height: 2.5rem;\n    font-size: 1.5rem;\n    padding-left: 0.3rem;\n    border-radius: 8px;\n}\n\n#nav-inbox img,\n#nav-today img,\n#nav-week img {\n    height: 70%;\n    width: auto;\n}\n\n#nav-bottom {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n#nav-bottom h1,\n#task-content h1,\n#task-modal-view-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n}\n\n#project-field {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 0.5rem;\n}\n\n.project-item {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.3rem;\n    border-radius: 8px;\n    font-size: 1rem;\n}\n\n.nav-item:hover,\n.project-item:hover {\n    background-color: var(--item-color-hover);\n}\n\n.nav-item:hover,\n.project-item button:hover {\n    cursor: pointer;\n}\n\n.nav-item:active,\n.project-item:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n}\n\n.item-selected {\n    background-color: var(--item-color-hover);\n}\n\n.project-item-left,\n.project-item-right {\n    background: none;\n    border: none;\n    font-size: 1.3rem;\n    height: 2.5rem;\n}\n\n.project-item-left {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n    width: 90%;\n}\n\n.project-item-right {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    visibility: hidden;\n}\n\n.project-item:hover > .project-item-right {\n    visibility: visible;\n}\n\n.task-item-right .material-symbols-outlined,\n.project-item .material-symbols-outlined {\n    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n}\n\n#btn-new-project-container,\n#btn-new-task-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#btn-new-project {\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    background: none;\n    border: none;\n    font: inherit;\n    outline: inherit;\n    margin-top: 1rem;\n}\n\n#btn-new-project,\n#btn-new-task {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n#btn-new-project:hover,\n#btn-new-task:hover {\n    background-color: var(--item-color-hover);\n    cursor: pointer;\n}\n\n#btn-new-project:active,\n#btn-new-task:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n}\n\n.material-symbols-outlined {\n    font-variation-settings: 'FILL' 1, 'wght' 500, 'GRAD' 0, 'opsz' 48;\n}\n\n#project-modal-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 0.4rem;\n}\n\n#project-name-input,\n#task-title-input,\n#task-description-input,\n#task-duedate-input {\n    font-family: 'Hind Siliguri', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    border-radius: 8px;\n    border: 1px solid var(--border-color);\n}\n\n#project-name-input {\n    display: block;\n    font-size: 1.3rem;\n    padding: 0.3rem 0.6rem 0.3rem 0.6rem;\n    width: 100%;\n}\n\n#task-title-input,\n#task-description-input,\n#task-duedate-input {\n    font-size: 1rem;\n    padding: 0.2rem 0.4rem 0.2rem 0.4rem;\n}\n\n#project-warning,\n#task-warning {\n    height: 1rem;\n    color: var(--warning-color);\n    text-align: center;\n}\n\n#btn-project-modal-container,\n#btn-task-modal-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\n#btn-add-project:hover,\n#btn-add-task:hover {\n    cursor: pointer;\n    background-color: var(--btn-add-color-hover);\n}\n\n#btn-cancel-project:hover,\n#btn-cancel-task:hover,\n#btn-new-task:hover {\n    cursor: pointer;\n    background-color: var(--btn-cancel-color-hover);\n}\n\n#btn-add-project:active,\n#btn-cancel-project:active,\n#btn-cancel-task:active,\n#btn-new-task:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n#btn-add-project,\n#btn-cancel-project,\n#btn-add-task,\n#btn-cancel-task {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    font-weight: 600;\n    color: white;\n    border-radius: 8px;\n    padding: 0.4rem 0.8rem 0.4rem 0.8rem;\n}\n\n#btn-add-project,\n#btn-add-task {\n    width: 5rem;\n    background-color: var(--btn-add-color);\n}\n\n#btn-cancel-project,\n#btn-cancel-task {\n    width: 5rem;\n    background-color: var(--btn-cancel-color);\n}\n\n#btn-new-task {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.3rem;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: white;\n    border-radius: 8px;\n    padding: 0.6rem 0.3rem 0.6rem 0.3rem;\n    width: 10rem;\n    background-color: var(--btn-cancel-color);\n}\n\n#task-content {\n    flex: 4;\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n#task-modal-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    position: fixed; /* Position the pop-up fixed on the screen */\n    top: 55%; /* Position the pop-up vertically centered */\n    left: 63%; /* Position the pop-up horizontally centered */\n    transform: translate(-50%, -50%); /* Offset the pop-up to the center of the screen */\n    z-index: 1; /* Make sure the pop-up is on top of other elements */\n}\n\n#task-modal {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    padding: 2rem; /* Add some padding to the pop-up */\n    border-radius: 8px;\n    background-color: var(--body-color);\n    width: 50%;\n}\n\n.task-modal-input,\n#task-modal > fieldset {\n    display: flex;\n    flex-direction: column;\n    gap: 0.3rem;\n}\n\n#task-modal > fieldset > div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#task-modal label,\n#task-content legend {\n    font-size: 1.2rem;\n    font-weight: 500;\n}\n\n.description-input-sublabel {\n    font-size: 0.7rem;\n    font-weight: 100;\n    color: #a0a3a7;\n}\n\n#task-field {\n    display: flex;\n    flex-direction: column;\n    gap: 0.7rem;\n}\n\n.task-item,\n.task-item-left,\n.task-item-right {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.task-item {\n    gap: 1rem;\n    width: 100%;\n    border: 1px solid grey;\n    padding: 0.5rem;\n    border-radius: 8px;\n}\n\n.task-item-left {\n    justify-content: center;\n    font-size: 1.2rem;\n    gap: 0.5rem;\n}\n\n.task-item-right {\n    justify-content: center;\n    gap: 0.2rem;\n}\n\n.task-item-right .material-symbols-outlined:hover,\n.btn-close-view-task-modal .material-symbols-outlined:hover {\n    font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n    cursor: pointer;\n}\n\n.btn-task-view,\n.btn-task-edit,\n.btn-task-remove,\n.btn-close-view-task-modal {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    background: none;\n    border: none;\n    font: inherit;\n    outline: inherit;\n}\n\n.task-item-middle {\n    flex: 2;\n    text-align: end;\n}\n\n.priority-low {\n    box-shadow: inset 0.3rem 0 var(--priority-low-color);\n}\n\n.priority-medium {\n    box-shadow: inset 0.3rem 0 var(--priority-medium-color);\n}\n\n.priority-high {\n    box-shadow: inset 0.3rem 0 var(--priority-high-color);\n}\n\n#task-checkbox {\n    cursor: pointer;\n}\n\n.task-done {\n    text-decoration: line-through;\n}\n\n.inactive {\n    pointer-events: none;\n    background-color: rgba(0, 0, 0, 0.2); /* Black w/ opacity */\n}\n\n#task-view-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    position: fixed; /* Position the pop-up fixed on the screen */\n    top: 50%; /* Position the pop-up vertically centered */\n    left: 63%; /* Position the pop-up horizontally centered */\n    transform: translate(-50%, -50%); /* Offset the pop-up to the center of the screen */\n    z-index: 1; /* Make sure the pop-up is on top of other elements */\n}\n\n#task-modal-view {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    padding: 2rem; /* Add some padding to the pop-up */\n    border-radius: 8px;\n    background-color: var(--body-color);\n    width: 50%;\n}\n\n.btn-close-view-task-modal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 26%;\n    top: 5%;\n}\n\n.btn-close-view-task-modal .material-symbols-outlined {\n    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n}\n\n#task-informations {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    font-size: 1.1rem;\n}\n\n#task-modal-view-description,\n#task-modal-view-duedate,\n#task-modal-view-priority {\n    display: flex;\n    flex-direction: column;\n    gap: 0.4rem;\n}\n\n#task-modal-view-description > p:first-child,\n#task-modal-view-duedate > p:first-child,\n#task-modal-view-priority > p:first-child {\n    text-decoration: underline;\n    font-weight: bold;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    /*font-family: 'Roboto', sans-serif;*/\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var A=e[s],d=o.base?A[0]+o.base:A[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var m=t(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==m)n[m].references++,n[m].updater(p);else{var u=r(p,o);o.byIndex=s,n.splice(s,0,{identifier:l,updater:u,references:1})}a.push(l)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var A=o(e,r),d=0;d<i.length;d++){var c=t(i[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=A}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),s=t(565),A=t.n(s),d=t(216),c=t.n(d),l=t(589),m=t.n(l),p=t(774),u={};u.styleTagTransform=m(),u.setAttributes=A(),u.insert=a().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=c(),n()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;const g=(()=>{const e=(e,n)=>{const t=document.createElement("label");return t.htmlFor=e,t.textContent=n,t},n=(e,n,t,o,r)=>{const i=document.createElement("input");return i.classList.add(e),i.name=n,i.id=t,i.type=o,i.required=r,i},t=e=>{const n=document.createElement("p");return n.id=e,n},o=e=>{const n=document.createElement("button");return n.id=e,n.textContent="Add",n},r=e=>{const n=document.createElement("button");return n.id=e,n.textContent="Cancel",n},i=(e,n)=>{const t=document.createElement("button");t.classList.add(e);const o=document.createElement("span");return o.classList.add("material-symbols-outlined"),o.textContent=n,t.appendChild(o),t};return{errorMsgProjectExist:()=>{document.getElementById("project-warning").textContent="Project already exist"},errorMsgProjectFieldEmpty:()=>{document.getElementById("project-warning").textContent="Project name is missing"},createProjectModal:()=>{const e=document.getElementById("project-modal-container"),i=document.createElement("div");i.id="btn-project-modal-container",i.appendChild(o("btn-add-project")),i.appendChild(r("btn-cancel-project")),e.appendChild(n("project-name-input","project-name-input","project-name-input","text")),e.appendChild(t("project-warning")),e.appendChild(i)},createProjectItem:(e,n)=>{const t=document.createElement("li");t.classList.add("project-item"),t.setAttribute("data-projectindex",`${n}`);const o=i("project-item-left","checklist"),r=document.createElement("p");r.textContent=e.getProjectName(),o.appendChild(r);const a=i("project-item-right","delete");return t.append(o,a),t},errorMsgTaskExist:()=>{document.getElementById("task-warning").textContent="Task already exist"},errorMsgTaskFieldEmpty:()=>{document.getElementById("task-warning").textContent="Task name is missing"},createTaskModal:()=>{const i=document.getElementById("task-modal-container"),a=document.createElement("form");a.id="task-modal",a.method="post";const s=document.createElement("div");s.classList.add("task-modal-input"),s.appendChild(e("task-title-input","Title*"));const A=n("task-title-input","task-title-input","task-title-input","text",!0);s.appendChild(A);const d=document.createElement("div");d.classList.add("task-modal-input");const c=e("task-description-input","Description"),l=document.createElement("span");l.classList.add("description-input-sublabel"),l.textContent=" (optional)",c.appendChild(l),d.appendChild(c),d.appendChild(((e,n,t,o,r)=>{const i=document.createElement("textarea");return i.name="task-description-input",i.id="task-description-input",i.rows="3",i.cols="30",i.style.resize="none",i})());const m=document.createElement("div");m.classList.add("task-modal-input"),m.appendChild(e("task-duedate-input","Due Date*")),m.appendChild(n("task-duedate-input","task-duedate-input","task-duedate-input","date",!0));const p=document.createElement("div");p.appendChild(n("task-priority","task-priority","task-priority-low","radio",!0)),p.appendChild(e("task-priority-low","Low"));const u=document.createElement("div");u.appendChild(n("task-priority","task-priority","task-priority-medium","radio",!0)),u.appendChild(e("task-priority-medium","Medium"));const g=document.createElement("div");g.appendChild(n("task-priority","task-priority","task-priority-high","radio",!0)),g.appendChild(e("task-priority-high","High"));const C=document.createElement("fieldset"),f=document.createElement("legend");f.textContent="Select Priority*",C.append(f,p,u,g);const h=document.createElement("div");h.id="btn-task-modal-container",h.appendChild(o("btn-add-task")),h.appendChild(r("btn-cancel-task")),a.appendChild(s),a.appendChild(d),a.appendChild(m),a.appendChild(C),a.appendChild(t("task-warning")),a.appendChild(h),i.appendChild(a)},createTaskItem:(n,t,o,r,a,s)=>{const A=document.createElement("li");A.classList.add("task-item"),A.setAttribute("data-projectindex",`${o}`),A.setAttribute("data-taskindex",`${r}`),A.classList.add(`priority-${s}`);const d=document.createElement("div");d.classList.add("task-item-left");const c=document.createElement("div");c.classList.add("task-item-middle"),c.textContent=a;const l=document.createElement("div");l.classList.add("task-item-right");const m=`${o}${r}${(e=>{let n="";const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",o=t.length;let r=0;for(;r<10;)n+=t.charAt(Math.floor(Math.random()*o)),r+=1;return n})()}`,p=((e,n)=>{const t=document.createElement("input");return t.name=e,t.id=e,t.type="checkbox",t.checked=n,t.classList.add("task-checkbox"),t})(m,n),u=e(m,t);return p.checked&&u.classList.add("task-done"),d.append(p,u),l.append(i("btn-task-view","visibility"),i("btn-task-edit","edit"),i("btn-task-remove","delete")),A.append(d,c,l),A},replaceTaskItem:(e,n,t,o)=>{const r=document.querySelectorAll(".task-item");r[e].firstChild.lastChild.textContent=n,r[e].children[1].textContent=t,r[e].className="",r[e].className=`task-item priority-${o}`},createViewTaskModal:(e,n,t,o,r)=>{const a=document.getElementById("task-view-container"),s=document.createElement("div");s.id="task-modal-view";const A=document.createElement("div");A.id="task-informations";const d=document.createElement("div");d.id="task-modal-view-title";const c=document.createElement("h1");c.textContent=e,d.appendChild(c);const l=document.createElement("div");l.id="task-modal-view-description";const m=document.createElement("p");m.textContent="Description:";const p=document.createElement("p");p.textContent=n,l.append(m,p);const u=document.createElement("div");u.id="task-modal-view-duedate";const g=document.createElement("p");g.textContent="Due Date:";const C=document.createElement("p");C.textContent=t,u.append(g,C);const f=document.createElement("div");f.id="task-modal-view-priority";const h=document.createElement("p");h.textContent="Priority:";const k=document.createElement("p");k.textContent=o,f.append(h,k),A.appendChild(l),A.appendChild(u),A.appendChild(f),s.appendChild(i("btn-close-view-task-modal","cancel")),s.appendChild(d),s.appendChild(A),a.appendChild(s)}}})(),C=(()=>{const e=[],n=()=>e;return{getProjects:n,addProject:e=>n().push(e),removeProject:e=>n().splice(e,1),isProjectExist:e=>n().some((n=>n.getProjectName()===e)),getProjectsName:()=>n().map((e=>e.getProjectName()))}})(),f=(()=>{const e=()=>{const e=document.getElementById("project-modal-container"),n=document.getElementById("btn-new-project");e.textContent="",n.style.display="block"};return{prepareInboxTasks:()=>{document.getElementById("task-field").textContent="";const e=[],n=C.getProjects();for(let t=0;t<n.length;t++)for(let o=0;o<n[t].getTasks().length;o++)e.push(n[t].getTasks()[o]);return e.sort(((e,n)=>new Date(e.dueDate)-new Date(n.dueDate)))},getTaskPriority:e=>{let n="";for(let t=0;t<e.length;t++)if(e[t].checked){switch(e[t].id){case"task-priority-low":n="low";break;case"task-priority-medium":n="medium";break;case"task-priority-high":n="high"}break}return n},toggleNodeState:()=>{const e=document.querySelector("header"),n=document.querySelector("main"),t=document.querySelector("footer");e.classList.toggle("inactive"),n.classList.toggle("inactive"),t.classList.toggle("inactive")},addNewProject:e=>{const n=(e=>{const n=[],t=()=>n;return{getProjectName:()=>e,getTasks:t,addTask:e=>t().push(e),getTaskName:e=>t()[e].name,getTaskDescription:e=>t()[e].description,getTaskDueDate:e=>t()[e].dueDate,getTaskPriority:e=>t()[e].priority,getTaskStatus:e=>t()[e].status,getTasksName:()=>t().map((e=>e.name)),setTaskName:(e,n)=>(t()[e].name=n,t()[e].name),setTaskDescription:(e,n)=>(t()[e].description=n,t()[e].description),seTaskDueDate:(e,n)=>(t()[e].dueDate=n,t()[e].dueDate),setTaskPriority:(e,n)=>(t()[e].priority=n,t()[e].priority),removeTask:e=>t().splice(e,1),isTaskExist:e=>t().some((n=>n.name===e)),toggleTaskStatus:(e,n)=>{t()[e].status=n}}})(e);C.addProject(n)},removeProjectModal:e,updateProjectList:e=>{const n=document.getElementById("project-field");n.textContent="";let t=0;e.forEach((e=>{n.appendChild(g.createProjectItem(e,t)),t+=1}))},removeItemSelection:e=>{e.forEach((e=>{e.classList.remove("item-selected")}))},addNewTask:(e,n,t,o,r)=>{const i=((e,n,t,o,r=!1)=>{let i=e,a=n,s=t,A=o,d=r;return{get name(){return i},set name(e){i=e},get description(){return a},set description(e){a=e},get dueDate(){return s},set dueDate(e){s=e},get priority(){return A},set priority(e){A=e},get status(){return d},set status(e){d=e}}})(n,t,o,r);e.addTask(i)},replaceTask:(e,n,t,o,r,i)=>{e.setTaskName(n,t),e.setTaskDescription(n,o),e.seTaskDueDate(n,r),e.setTaskPriority(n,i),g.replaceTaskItem(n,t,r,i)},openTaskModal:()=>{e(),g.createTaskModal()},loadTaskInformations:(e,n,t,o)=>{const r=document.getElementById("task-title-input"),i=document.getElementById("task-description-input"),a=document.getElementById("task-duedate-input"),s=document.querySelectorAll(".task-priority");r.value=e,i.value=n,a.value=t,((e,n)=>{let t="";for(let o=0;o<e.length;o++)if(-1!==e[o].id.indexOf(n)){t=e[o];break}return t})(s,o).checked=!0},addTaskHeaderText:e=>{document.getElementById("task-content").children[0].textContent=e},updateTaskList:(e,n,t)=>{const o=document.getElementById("task-field");"project-item"===t&&(o.textContent="");for(let t=0;t<e[n].getTasks().length;t++)o.appendChild(g.createTaskItem(e[n].getTaskStatus(t),e[n].getTaskName(t),n,t,e[n].getTaskDueDate(t),e[n].getTaskPriority(t)))},removeTaskModal:()=>{document.getElementById("task-modal-container").textContent=""},toggleNewTaskButton:e=>{const n=document.getElementById("btn-new-task");e>0?n.style.display="flex":e<=0&&(n.style.display="none")},removeViewTaskModal:()=>{document.getElementById("task-view-container").textContent=""},toggleCheckboxLabelState:(e,n)=>{const t=document.querySelector(`label[for="${e}"]`);n?t.classList.add("task-done"):t.classList.remove("task-done")}}})(),h=(()=>{const e=e=>{const n=document.querySelectorAll(".btn-task-view"),t=document.getElementById("btn-new-task");n.forEach((n=>{n.addEventListener("click",(()=>{const o=n.parentNode.parentNode.dataset.taskindex,r=n.parentNode.parentNode.dataset.projectindex;t.style.display="none",f.removeProjectModal(),f.toggleNodeState(),g.createViewTaskModal(e[r].getTaskName(o),e[r].getTaskDescription(o),e[r].getTaskDueDate(o),e[r].getTaskPriority(o)),document.querySelector(".btn-close-view-task-modal").addEventListener("click",(()=>{f.removeViewTaskModal(),f.toggleNodeState(),f.toggleNewTaskButton(C.getProjects().length)}))}))}))},n=e=>{const n=document.querySelectorAll(".btn-task-edit"),t=document.getElementById("btn-new-task");n.forEach((n=>{n.addEventListener("click",(()=>{t.style.display="none";const o=n.parentNode.parentNode.dataset.taskindex,r=n.parentNode.parentNode.dataset.projectindex,i=e[r].getTaskName(o),a=e[r].getTaskDescription(o),s=e[r].getTaskDueDate(o),A=e[r].getTaskPriority(o);f.removeProjectModal(),f.openTaskModal(),f.loadTaskInformations(i,a,s,A),f.toggleNodeState(),((e,n)=>{const t=document.querySelector("form"),o=document.getElementById("btn-cancel-task"),r=document.getElementById("task-title-input"),i=document.getElementById("task-description-input"),a=document.getElementById("task-duedate-input"),s=document.querySelectorAll(".task-priority");t.addEventListener("submit",(t=>{t.preventDefault();const o=C.getProjects()[e];if(o.isTaskExist(r.value))if(o.getTasksName().indexOf(r.value)!==Number(n))g.errorMsgTaskExist();else{const e=f.getTaskPriority(s);f.replaceTask(o,n,r.value,i.value,a.value,e),f.removeTaskModal(),f.toggleNodeState(),f.toggleNewTaskButton(C.getProjects().length)}else if(null!==r.value.match(/^ *$/))g.errorMsgTaskFieldEmpty();else{const e=f.getTaskPriority(s);f.replaceTask(o,n,r.value,i.value,a.value,e),f.removeTaskModal(),f.toggleNodeState(),f.toggleNewTaskButton(C.getProjects().length)}})),o.addEventListener("click",(e=>{e.preventDefault(),f.removeTaskModal(),f.toggleNodeState(),f.toggleNewTaskButton(C.getProjects().length)}))})(r,o)}))}))},t=e=>{document.querySelectorAll(".task-checkbox").forEach((n=>{n.addEventListener("change",(()=>{const t=n.parentNode.parentNode.dataset.taskindex,o=n.parentNode.parentNode.dataset.projectindex;n.checked?(f.toggleCheckboxLabelState(n.id,!0),e[o].toggleTaskStatus(t,!0)):(f.toggleCheckboxLabelState(n.id,!1),e[o].toggleTaskStatus(t,!1))}))}))},o=(r,i)=>{const a=document.querySelectorAll(".btn-task-remove"),s=document.getElementById("task-field");a.forEach((a=>{a.addEventListener("click",(()=>{const A=a.parentNode.parentNode.dataset.taskindex,d=a.parentNode.parentNode.dataset.projectindex;if(f.removeTaskModal(),r[d].removeTask(A),s.textContent="","nav-item"===i){let i=!1;for(let e=0;e<r.length;e++){for(let n=0;n<r[e].getTasks().length;n++)if(r[e].getTasks().length>0){i=!0;break}if(!0===i)break}if(!0===i){for(let e=0;e<r.length;e++)f.updateTaskList(r,e,"nav-item");t(r),e(r),n(r),o(r,"nav-item")}else s.textContent=""}else"project-item"===i&&(r[d].getTasks().length>0?(f.updateTaskList(r,d,"project-item"),t(r),e(r),n(r),o(r,"project-item")):s.textContent="")}))}))},r=()=>{const r=document.querySelectorAll("li"),i=document.querySelectorAll(".project-item-left"),a=document.getElementById("project-field");let s=C.getProjects();const A=a.firstChild;f.removeItemSelection(r),A.classList.add("item-selected"),f.addTaskHeaderText(s[0].getProjectName()),f.updateTaskList(s,A.dataset.projectindex,"project-item"),f.toggleNewTaskButton(C.getProjects().length),t(s),e(s),n(s),o(s,"project-item"),i.forEach((i=>{i.addEventListener("click",(()=>{f.removeItemSelection(r),f.toggleNewTaskButton(s.length),i.parentNode.classList.add("item-selected"),s=C.getProjects();const a=i.parentNode.dataset.projectindex;f.addTaskHeaderText(s[a].getProjectName()),f.updateTaskList(s,a,"project-item"),t(s),e(s),n(s),o(s,"project-item")}))}))},i=()=>{const e=document.querySelectorAll(".project-item-right"),n=document.getElementById("project-field");document.getElementById("task-field"),e.forEach((e=>{e.addEventListener("click",(()=>{C.removeProject(e.parentNode.dataset.projectindex),n.textContent="",C.getProjects().length>0?(f.updateProjectList(C.getProjects()),r(),i()):(f.toggleNewTaskButton(C.getProjects().length),f.addTaskHeaderText(""))}))}))};return{initialEventListener:()=>{const a=document.getElementById("nav-inbox");a.classList.add("item-selected"),f.addTaskHeaderText(a.lastElementChild.textContent),(()=>{const e=document.getElementById("btn-new-project");f.toggleNewTaskButton(C.getProjects().length),e.addEventListener("click",(()=>{e.style.display="none",g.createProjectModal(),(()=>{const e=document.getElementById("btn-add-project"),n=document.getElementById("btn-cancel-project"),t=document.getElementById("project-name-input"),o=document.getElementById("btn-new-project");document.querySelectorAll(".project-item"),e.addEventListener("click",(()=>{C.isProjectExist(t.value)?g.errorMsgProjectExist():null===t.value||null!==t.value.match(/^ *$/)?g.errorMsgProjectFieldEmpty():(f.addNewProject(t.value),f.updateProjectList(C.getProjects()),f.removeProjectModal(),r(),i())})),t.addEventListener("keydown",(n=>{"Enter"===n.key&&e.click()})),n.addEventListener("click",(()=>{f.removeProjectModal(),o.style.display="flex"}))})()}))})(),(()=>{const r=document.getElementById("btn-new-task");r.addEventListener("click",(()=>{r.style.display="none",f.openTaskModal(),f.toggleNodeState(),(()=>{const r=document.querySelector("form"),i=document.getElementById("btn-cancel-task"),a=document.getElementById("task-title-input"),s=document.getElementById("task-description-input"),A=document.getElementById("task-duedate-input"),d=document.querySelectorAll(".task-priority"),c=document.querySelectorAll(".project-item");r.addEventListener("submit",(r=>{r.preventDefault();for(let r=0;r<c.length;r++)if(c[r].classList.contains("item-selected")){const i=c[r].dataset.projectindex,l=C.getProjects(),m=l[i];if(m.isTaskExist(a.value))g.errorMsgTaskExist();else{if(null===a.value.match(/^ *$/)){const r=f.getTaskPriority(d);f.addNewTask(m,a.value,s.value,A.value,r),f.updateTaskList(l,i,"project-item"),f.removeTaskModal(),f.toggleNodeState(),f.toggleNewTaskButton(C.getProjects().length),t(l),e(l),n(l),o(l,"project-item");break}g.errorMsgTaskFieldEmpty()}}})),i.addEventListener("click",(e=>{e.preventDefault(),f.removeTaskModal(),f.toggleNodeState(),f.toggleNewTaskButton(C.getProjects().length)}))})()}))})(),document.querySelectorAll(".nav-item").forEach((r=>{r.addEventListener("click",(()=>{const i=document.querySelectorAll("li");f.removeItemSelection(i),f.toggleNewTaskButton(-1),r.classList.add("item-selected"),f.addTaskHeaderText(r.lastElementChild.textContent);const a=C.getProjects();if(document.getElementById("task-field").textContent="","nav-inbox"===r.id){for(let e=0;e<a.length;e++)f.updateTaskList(a,e,"nav-item");t(a),e(a),n(a),o(a,"nav-item")}f.toggleNewTaskButton(null)}))}))}}})();h.initialEventListener()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,